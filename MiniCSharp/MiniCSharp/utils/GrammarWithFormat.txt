Program' -> Program
Program -> Decl Program
Program -> Decl
Decl -> VariableDecl
Decl -> FunctionDecl
Decl -> ConstDecl
Decl -> ClassDecl
Decl -> InterfaceDecl
VariableDecl -> Variable ;
Variable -> Type ident
ConstDecl -> const ConstType ident ;
ConstType -> int
ConstType -> double
ConstType -> bool
ConstType -> string
Type -> int Type'
Type -> double Type'
Type -> bool Type'
Type -> string Type'
Type -> ident Type'
Type' -> [ ] Type'
Type' -> Ɛ
FunctionDecl -> Type ident ( Formals ) StmtBlock
FunctionDecl -> void ident ( Formals ) StmtBlock
Formals -> Variable , Formals
Formals -> Variable
ClassDecl -> class ident CD' CD'' {​​ CD''' }
CD' -> : ident
CD' -> Ɛ
CD'' -> , ident CD''
CD'' -> Ɛ
CD''' -> Field CD'''
CD''' -> Ɛ
Field -> VariableDecl
Field -> FunctionDecl
Field -> ConstDecl
InterfaceDecl -> interface ident { ID' }
ID' -> Prototype ID'
ID' -> Ɛ
Prototype -> Type ident ( Formals ) ;
Prototype -> void ident ( Formals ) ;
StmtBlock -> { SB' SB'' SB''' }
SB' -> VariableDecl SB'
SB' -> Ɛ
SB'' -> ConstDecl SB''
SB'' -> Ɛ
SB''' -> Stmt SB'''
SB''' -> Ɛ
Stmt -> Stmt' ;
Stmt -> IfStmt
Stmt -> WhileStmt
Stmt -> ForStmt
Stmt -> BreakStmt
Stmt -> ReturnStmt
Stmt -> PrintStmt
Stmt -> StmtBlock
Stmt -> CallStmt
CallStmt -> ident ( Actuals )
CallStmt -> ident . ident ( Actuals )
Actuals -> Expr , Actuals
Actuals -> Expr
Stmt' -> Expr
Stmt' -> Ɛ
IfStmt -> if ( Expr ) Stmt IS'
IS' -> else Stmt
IS' -> Ɛ
WhileStmt -> while ( Expr ) Stmt
ForStmt -> for ( Expr ; Expr ; Expr ) Stmt
ReturnStmt -> return Expr ;
BreakStmt -> break ;
PrintStmt -> Console . Writeline ( PS' ) ;
PS' -> Expr PS'
PS' -> , Expr
Expr -> Expr1 Expr'
Expr' -> && Expr1 Expr'
Expr' -> Ɛ
Expr1 -> Expr2 Expr1'
Expr1' -> == Expr2 Expr1'
Expr1' -> Ɛ
Expr2 -> Expr3 Expr2'
Expr2' -> < Expr3 Expr2'
Expr2' -> <= Expr3 Expr2'
Expr2' -> Ɛ
Expr3 -> Expr4 Expr3'
Expr3' -> + Expr4 Expr3'
Expr3' -> Ɛ
Expr4 -> Expr5 Expr4'
Expr4' -> * Expr5 Expr4'
Expr4' -> % Expr5 Expr4'
Expr4' -> Ɛ
Expr5 -> LValue = Expr
Expr5 -> Constant
Expr5 -> LValue
Expr5 -> this
Expr5 -> ( Expr )
Expr5 -> - Expr
Expr5 -> ! Expr
Expr5 -> New ( ident )
LValue -> ident
LValue -> Expr . ident
Constant -> intConstant
Constant -> doubleConstant
Constant -> boolConstant
Constant -> stringConstant
Constant -> null